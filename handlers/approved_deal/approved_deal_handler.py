from aiogram import Router, F
from aiogram import types
from keyboards import keyboard_approved_deal
from aiogram.utils.markdown import hide_link
router = Router()
from datetime import datetime
import re
from DataBase import DataBase

def is_valid_phone_start(phone: str) -> bool:
    phone = phone.lstrip()  # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã —Å–ª–µ–≤–∞
    return phone.startswith(('+7', '8'))

def validate_phone_number(phone):
    # –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –Ω–æ–º–µ—Ä–æ–≤ (–º–æ–∂–µ—Ç –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å +7, 7, 8, –∫–æ–¥ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏ 7 —Ü–∏—Ñ—Ä)
    pattern = r'^(\+7|7|8)?[\s\-]?\(?[489][0-9]{2}\)?[\s\-]?[0-9]{3}[\s\-]?[0-9]{2}[\s\-]?[0-9]{2}$'

    if re.match(pattern, phone):
        return True
    return False



###–î–æ–¥–µ–ª–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–æ–º–µ—Ä–∞
@router.callback_query(F.data.startswith("approved_"))
async def deal_approved_start(callback: types.CallbackQuery):
    message_to_user = "‚òéÔ∏è –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç."
    ##—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –≤ –ë–î???? - –≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–∏–ø–∞ —É—Å–ª—É–≥–∏ - + –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ —Å—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏!
    now = datetime.now()
    deal_type = callback.data.split('_')[1]
    print(deal_type)
    user_id = callback.from_user.id
    create_dtm = now.strftime("%Y-%m-%d %H:%M:%S")
    status = False
    tg_username = callback.from_user.username

    #—Ñ—É–Ω–∫—Ü–∏—è
    await DataBase.DataBase_add_1data(user_id, deal_type, status, create_dtm, tg_username)

    #–ò–¢–û–ì:
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ç–∞–±–ª–∏—Ü—É deals - —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–∏–ø —Å–¥–µ–ª–∫–∏, –≤—Ä–µ–º—è, user_id
    await callback.message.answer(message_to_user)

@router.message(F.text.startswith(('+7', '8')))
async def deal_approved_number(message: types.Message):

    #–ó–∞–ø—Ä–æ—Å –∏–∑ –ë–î c –¥–∞–Ω–Ω—ã–º–∏ —Å–¥–µ–ª–∫–∏ (–¢–∏–ø —É—Å–ª—É–≥–∏ –ø–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–∞–º–æ–π –ø–æ—Å–ª–µ–¥–Ω–µ–π –∑–∞–ø–∏—Å—å—é–≤ –ë–î (—Å–∞–º–∞—è –Ω–µ–¥–∞–≤–Ω—è—è –∫–Ω–æ–ø–∫–∞ –ø–æ —Ç–∏–ø—É —Å–¥–µ–ª–∫–∏)

    #–ü–æ –≤—Ç–æ—Ä–∏—á–Ω–æ–º—É –∫–ª—é—á—É –∏–∑ —Ç–∞–±–ª–∏—Ü—ã deals_types
    user_id = message.from_user.id
    phone_number = message.text

    if validate_phone_number(phone_number):
        await DataBase.DataBase_add_2data(user_id, phone_number)

        #–§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è deal_type DataBase
        deal_type_description = DataBase.DataBase_find_dealtype(user_id)
        print(deal_type_description)
        await message.answer(f"–û—Ç–ª–∏—á–Ω–æ! –¢–∏–ø —É—Å–ª—É–≥–∏: {deal_type_description}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {message.text}\n–ú—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç üìû\n\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–Ω—ã üëá", reply_markup=keyboard_approved_deal.approved_deal_final())
    else:
        await message.answer(f"–ù–æ–º–µ—Ä –Ω–µ–≤–µ—Ä–Ω—ã–π, –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å +7 –∏–ª–∏ 8 –∏ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 11 —Ü–∏—Ñ—Ä. –í–≤–µ–¥–∏—Ç–µ –µ–≥–æ –µ—â–µ —Ä–∞–∑")
    #–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Ç–≥ –ø–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å –ø–æ–º–æ—â—å—é UPDATE WHERE user_id = message.user.id +-


@router.callback_query(F.data == "final_deal_approved")
async def deal_approved_number(callback: types.CallbackQuery):
    #–õ–æ–≥–∏–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î - –ü–æ–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ –Ω–∞ True - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞ –∏ –≤—Å–µ
    # UPDATE WHERE USER_ID = user.id AND create_date.time DESC LIMIT 1
    # SET status = true
    user_id = callback.from_user.id
    await DataBase.DataBase_approve_status(user_id)
    await callback.message.answer("–û—Ç–ª–∏—á–Ω–æ, –í—ã –∑–∞–ø–∏—Å–∞–Ω—ã!\n\n"
        '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∏ —Å –¥—Ä—É–≥–∏–º–∏ —É—Å–ª—É–≥–∞–º–∏ –Ω–∞ –Ω–∞—à–µ–º <a href="https://www.forabank.ru/">–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ</a>.')




